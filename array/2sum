class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {

        unordered_map<int,int> f; // A mapping to store numbers and their indices
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            int rem=target-nums[i]; // Find the required number to reach the target
            if(f.find(rem)!=f.end())
                return {f[rem],i}; // Return indices of the complement and current number
            f[nums[i]]=i; // Store the number with its index
        }
        return {}; // This line is never reached due to the problem guarantee
    }
};
